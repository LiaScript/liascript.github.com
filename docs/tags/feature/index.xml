<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Feature on LiaScript</title><link>https://LiaScript.github.io/tags/feature/</link><description>Recent content in Feature on LiaScript</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 06 Aug 2024 00:00:00 -0400</lastBuildDate><atom:link href="https://LiaScript.github.io/tags/feature/index.xml" rel="self" type="application/rss+xml"/><item><title>Collaborative drawings made with LiaScript</title><link>https://LiaScript.github.io/blog/collaborative-drawings/</link><pubDate>Tue, 06 Aug 2024 00:00:00 -0400</pubDate><guid>https://LiaScript.github.io/blog/collaborative-drawings/</guid><description>In this article we will explore how to create a collaborative drawing canvas (in other words a whiteboard) using LiaScript&amp;rsquo;s internal publish -subscribe mechanisms. This feature will allows multiple users to interact with the same LiaScript course in real-time, enabling collaborative drawing and marking, as demonstrated in the following video.
1. Publish-Subscribe (How does it work?) The publish-subscribe (pub-sub) pattern is a messaging paradigm where messages are sent by publishers to specific topics without the publisher knowing who, if anyone, will receive the message.</description></item><item><title>Importing a local WebCam-stream into a Presentation</title><link>https://LiaScript.github.io/blog/importing-a-local-camera-stream-into-a-presentation/</link><pubDate>Fri, 02 Feb 2024 00:00:00 -0500</pubDate><guid>https://LiaScript.github.io/blog/importing-a-local-camera-stream-into-a-presentation/</guid><description>Sometimes you want to show a live video stream from a local WebCam in your presentation, without having to move to another application. This can be done with the following script and video-tag. It will ask for permission to access the camera and will display the video stream in a video element. If you click on the button again, the camera will be closed.
Simply copy both tags into your LiaScript document and you will be able to open and close the camera stream with the button.</description></item><item><title>Tables &amp; Data Visualizations</title><link>https://LiaScript.github.io/blog/tables-and-data-visualizations/</link><pubDate>Mon, 05 Jun 2023 00:00:00 -0400</pubDate><guid>https://LiaScript.github.io/blog/tables-and-data-visualizations/</guid><description>If Markdown tables are used to store data, why not directly visualizing it?
LiaScript offers 10 different types of plots, the best type is automatically chosen, based on the format of a table and its values&amp;hellip; but you are free to use your desired one ;-)
You can use this this example as a basis for your own course by following this link
&amp;hellip; Or experiment with it in the LiveEditor below:</description></item><item><title>Macros</title><link>https://LiaScript.github.io/blog/macros/</link><pubDate>Thu, 04 May 2023 00:00:00 -0400</pubDate><guid>https://LiaScript.github.io/blog/macros/</guid><description>How can you define custom macros or even define reusable LiaScript libraries?
Just use @ followed by a custom name for your macro You can add parameters Shortcut macros, that call others predefined parameters And block-macros not that difficult
You can use this this example as a basis for your own course by following this link
&amp;hellip; Or experiment with it in the LiveEditor below:</description></item><item><title>Images are handled differently</title><link>https://LiaScript.github.io/blog/images-are-handled-differently/</link><pubDate>Sat, 29 Apr 2023 00:00:00 -0400</pubDate><guid>https://LiaScript.github.io/blog/images-are-handled-differently/</guid><description>LiaScript-Markdown handles images differently:
a paragraph with a starting image will produce a floating environment a paragraph with only images will produce a gallery the image will be optimally sized &amp;amp; placed &amp;ldquo;titles&amp;rdquo; will be used as captions You can use this this example as a basis for your own course by following this link
&amp;hellip; Or experiment with it in the LiveEditor below:</description></item><item><title>One Document - Multiple Representations</title><link>https://LiaScript.github.io/blog/one-document-mutliple-representations/</link><pubDate>Sat, 29 Apr 2023 00:00:00 -0400</pubDate><guid>https://LiaScript.github.io/blog/one-document-mutliple-representations/</guid><description>This is part one of a demo series that explains certain LiaScript design elements. I this part you will learn how to create narrative presentations from one Markdown document only and how one course can be used to teach in different languages. For the text to speech output we apply simple-speech &amp;hellip;
If your browser does not support TTS, LiaScript will fallback ResponsiveVoice.
You can use this this example as a basis for your own course by following this link</description></item><item><title>Promoting your Content</title><link>https://LiaScript.github.io/blog/promoting-your-content/</link><pubDate>Wed, 01 Jun 2022 00:00:00 -0400</pubDate><guid>https://LiaScript.github.io/blog/promoting-your-content/</guid><description>If you want to &amp;ldquo;promote&amp;rdquo; the LiaScript content you have created, or share it with a wider audience, then you can use the following methods.
0. Add LiaScript meta-information Add a first HTML-comment to your Markdown document, as depicted below. This HTML-comment should provide at least the information about the author, an email address for contacting, a comment that summarizes your course in a few sentences, a logo, and an optional repository, which points to your GitHub, GitLab repository, if the course will be served from somewhere else.</description></item><item><title>Import A-Frame 3D models, scenes, and more into LiaScript open-courSes</title><link>https://LiaScript.github.io/blog/import-a-frame-3d-models-scenes-and-more-into-liascript/</link><pubDate>Wed, 18 May 2022 00:00:00 -0400</pubDate><guid>https://LiaScript.github.io/blog/import-a-frame-3d-models-scenes-and-more-into-liascript/</guid><description>This blog entry presents an example of how to import A-Frame 3D models, scenes, and more into LiaScript open-courSes.
The entire README file can be interpreted as a library, we say template, that only needs to be imported into your LiaScript course via:
&amp;lt;!-- import: https://raw.githubusercontent.com/liaTemplates/aframe/master/README.md --&amp;gt; # Your Course And then you can start to use all the features and examples that are provided in the original README file.</description></item><item><title>How to activate Tooltips in LiaScript</title><link>https://LiaScript.github.io/blog/how-to-activate-tooltips-in-liascript/</link><pubDate>Mon, 24 Jan 2022 00:00:00 -0500</pubDate><guid>https://LiaScript.github.io/blog/how-to-activate-tooltips-in-liascript/</guid><description>LiaScript has a new tooltip feature, which was inspired by the Wikipedia tooltips, which provide more information about a certain topic if you hover a link with the mouse. In LiaScript this feature needs to be activated manually, since it requires a little additional bandwidth, but the result is pretty much the same as in Wikipedia.
To activate tooltips:
open the settings-tab check the tooltips check-box This additional bandwidth is required, since the tooltips are generated on-demand and also without any backend involved.</description></item><item><title>LiaScript Cheet-Sheet (German)</title><link>https://LiaScript.github.io/blog/liascript-cheet-sheet/</link><pubDate>Wed, 21 Oct 2020 00:00:00 -0400</pubDate><guid>https://LiaScript.github.io/blog/liascript-cheet-sheet/</guid><description>Ein Spickzettel der wichtgsten LiaScript-Funktionalität. Weitere sind in Vorbereitung &amp;hellip;
Überschriften # Überschrift 1 ## Überschrift 2 ### Überschrift 3 #### Überschrift 4 ##### Überschrift 5 ###### Überschrift 6 Texthervorhebungen _kursiv_ auch *kursig* __fett__ auch __fett__ ___kursiv___ und ***fett*** ~durchgestrichen~ ~~unterstrichen~~ ~~~durch- &amp;amp; unterstrichen~~~ ^hochgestellt^ `unformatierter Code` Textblock Einfache Blöcke/Absätze werden durch Leerzeilen voneinander getrennt und können bel. lang sein. &amp;gt; Blöcke mit einem vorangestellten `&amp;gt;` &amp;gt; werden hervorgeboben dargestellt. Listen Ungeordnet:</description></item><item><title>Markdown just got a new preview tag</title><link>https://LiaScript.github.io/blog/markdown-just-got-a-new-preview-tag/</link><pubDate>Wed, 30 Sep 2020 00:00:00 -0400</pubDate><guid>https://LiaScript.github.io/blog/markdown-just-got-a-new-preview-tag/</guid><description>LiaScript has a new link type/tag that allows you to add preview cards to your LiaScript course or even to your personal website. This way you do not have to update your personal website and other resources.
Requirements and Usage First of all, your Markdown document must have an HTML comment tag at the beginning. If your document is on GitHub, this will not be visible on the rendered Markdown document.</description></item><item><title>LiaScript: Crash-courSe in 13 Akten (German)</title><link>https://LiaScript.github.io/blog/liascript-crash-course-in-13-akten/</link><pubDate>Mon, 21 Sep 2020 00:00:00 -0400</pubDate><guid>https://LiaScript.github.io/blog/liascript-crash-course-in-13-akten/</guid><description>Dieses Tutorial führt in 13 „kurzen“ Schritt-für-Schritt Videos in die Kursentwicklung mit LiaScript ein, von der Installation des Editors hin zu den wichtigsten Gestaltungsmöglichkeiten. Wie erstellt man interaktive Inhalte, nutzt Animationen und bringt dem Kurs das Sprechen bei&amp;hellip;
Eine Zusammenfassung der wichtigsten Punkte je Video wird gegeben.
#1 Installation Installation des Editors und der benötigten Plugins
Die Quellen sind unten noch einmal aufgelistet, es wird einerseits der Atom-Editor benötigt, sowie die beiden Plugins.</description></item><item><title>LiaScript - BearLearn Talk 2019</title><link>https://LiaScript.github.io/blog/berlearn-talk-2019/</link><pubDate>Thu, 01 Aug 2019 00:00:00 -0400</pubDate><guid>https://LiaScript.github.io/blog/berlearn-talk-2019/</guid><description>This is an early example of a LiaScript presentation, that was given as a BearLearn Talk 2019 in Berlin. It shows how to create a simple narrative presentations with Text-to-Speech output and animations and more. The arguments for creating a markup language for open online-courses are still the same. And if you inspect the course, you will see, that the format of the course has not changed at all, only the URL, the syntax is still the same, we only added more features to the interpreter and improved the presentation.</description></item></channel></rss>