<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Shorts on LiaScript</title><link>https://LiaScript.github.io/categories/shorts/</link><description>Recent content in Shorts on LiaScript</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 21 Jun 2023 00:00:00 -0400</lastBuildDate><atom:link href="https://LiaScript.github.io/categories/shorts/index.xml" rel="self" type="application/rss+xml"/><item><title>Where is Content Stored?</title><link>https://LiaScript.github.io/blog/where-is-content-stored/</link><pubDate>Wed, 21 Jun 2023 00:00:00 -0400</pubDate><guid>https://LiaScript.github.io/blog/where-is-content-stored/</guid><description>Did you know that LiaScript tries to be agnostic as possible, when it comes to hosting? The thing is, you host your content by your own and only refer to it, via a URL-Parameter that you attach to the LiaScript website.
https://LiaScript.github.io/course/?THE_URL_TO_YOUR_COURSE.md
Git - Platforms Although, we prefer GitHub &amp;amp; git for versioning, hosting, and publishing, you should be able to use any versioning system or platform to host your course content.</description></item><item><title>Tables &amp; Data Visualizations</title><link>https://LiaScript.github.io/blog/tables-and-data-visualizations/</link><pubDate>Mon, 05 Jun 2023 00:00:00 -0400</pubDate><guid>https://LiaScript.github.io/blog/tables-and-data-visualizations/</guid><description>If Markdown tables are used to store data, why not directly visualizing it?
LiaScript offers 10 different types of plots, the best type is automatically chosen, based on the format of a table and its values&amp;hellip; but you are free to use your desired one ;-)
You can use this this example as a basis for your own course by following this link
&amp;hellip; Or experiment with it in the LiveEditor below:</description></item><item><title>6 Quizzes in 100 Seconds</title><link>https://LiaScript.github.io/blog/6-quizzes-in-100-seconds/</link><pubDate>Tue, 09 May 2023 00:00:00 -0400</pubDate><guid>https://LiaScript.github.io/blog/6-quizzes-in-100-seconds/</guid><description>This is our report on making quizzes in LiaScript in 100 seconds.
Do you know an easier way of creating quizzes with your favorite LMS?
Multiple-Choice Single-Choice Matrix Text-Input Selection Gap-Text You can use this this example as a basis for your own course by following this link
&amp;hellip; Or experiment with it in the LiveEditor below:</description></item><item><title>A Custom Extension for Algebra</title><link>https://LiaScript.github.io/blog/a-custom-extension-for-algebra/</link><pubDate>Tue, 09 May 2023 00:00:00 -0400</pubDate><guid>https://LiaScript.github.io/blog/a-custom-extension-for-algebra/</guid><description>Today we show how to build a custom extension for executable code-snippets for LiaScript #Markdown by using the computer algebra systems Algebrite. The same can be done with any other library, framework, API &amp;hellip;
You can use this this example as a basis for your own course by following this link
&amp;hellip; Or experiment with it in the LiveEditor below:</description></item><item><title>Executable Code</title><link>https://LiaScript.github.io/blog/executable-code/</link><pubDate>Mon, 08 May 2023 00:00:00 -0400</pubDate><guid>https://LiaScript.github.io/blog/executable-code/</guid><description>How to make your Markdown code-snippets editable and executable?
Our solution, just attach a script-tag to it that defines how the input or inputs should be evaluated&amp;hellip;
You can use this this example as a basis for your own course by following this link
&amp;hellip; Or experiment with it in the LiveEditor below:</description></item><item><title>Macros</title><link>https://LiaScript.github.io/blog/macros/</link><pubDate>Thu, 04 May 2023 00:00:00 -0400</pubDate><guid>https://LiaScript.github.io/blog/macros/</guid><description>How can you define custom macros or even define reusable LiaScript libraries?
Just use @ followed by a custom name for your macro You can add parameters Shortcut macros, that call others predefined parameters And block-macros not that difficult
You can use this this example as a basis for your own course by following this link
&amp;hellip; Or experiment with it in the LiveEditor below:</description></item><item><title>Embedding Multimedia and More</title><link>https://LiaScript.github.io/blog/embedding-multimedia-and-more/</link><pubDate>Wed, 03 May 2023 00:00:00 -0400</pubDate><guid>https://LiaScript.github.io/blog/embedding-multimedia-and-more/</guid><description>There are 4 ways in LiaScript to embed multimedia content:
the classical way ![alt](image-url) sound ?[alt](sound-url) video !?[alt](video-url] for everything else ??[alt](url) You can use this this example as a basis for your own course by following this link
&amp;hellip; Or experiment with it in the LiveEditor below:</description></item><item><title>ASCII-aRT</title><link>https://LiaScript.github.io/blog/ascii-art/</link><pubDate>Mon, 01 May 2023 00:00:00 -0400</pubDate><guid>https://LiaScript.github.io/blog/ascii-art/</guid><description>After writing systems, here is a quick intro into ASCII-aRT - the next evolutionary step of writing - and how it is integrated into LiaScript, such that you can integrate for example also formulas and animations to your image&amp;hellip;
You can use this this example as a basis for your own course by following this link
&amp;hellip; Or experiment with it in the LiveEditor below:</description></item><item><title>Fonts: Dead or Alive</title><link>https://LiaScript.github.io/blog/fonts-dead-or-alive/</link><pubDate>Sun, 30 Apr 2023 00:00:00 -0400</pubDate><guid>https://LiaScript.github.io/blog/fonts-dead-or-alive/</guid><description>Fascinated by the length of the URL as well as by foreign languages and writing systems we added the opportunity to use different fonts in LiaScript-Markdown. We hoped that this can be useful for learning ancient and extinct languages&amp;hellip;
Not all fonts are installed on my machine, so they are not displayed in the editor. LiaScript however will load and display them appropriately. Since they are Unicode-characters, you can style and use these ancient writing systems as ordinary Markdown.</description></item><item><title>Images are handled differently</title><link>https://LiaScript.github.io/blog/images-are-handled-differently/</link><pubDate>Sat, 29 Apr 2023 00:00:00 -0400</pubDate><guid>https://LiaScript.github.io/blog/images-are-handled-differently/</guid><description>LiaScript-Markdown handles images differently:
a paragraph with a starting image will produce a floating environment a paragraph with only images will produce a gallery the image will be optimally sized &amp;amp; placed &amp;ldquo;titles&amp;rdquo; will be used as captions You can use this this example as a basis for your own course by following this link
&amp;hellip; Or experiment with it in the LiveEditor below:</description></item><item><title>One Document - Multiple Representations</title><link>https://LiaScript.github.io/blog/one-document-mutliple-representations/</link><pubDate>Sat, 29 Apr 2023 00:00:00 -0400</pubDate><guid>https://LiaScript.github.io/blog/one-document-mutliple-representations/</guid><description>This is part one of a demo series that explains certain LiaScript design elements. I this part you will learn how to create narrative presentations from one Markdown document only and how one course can be used to teach in different languages. For the text to speech output we apply simple-speech &amp;hellip;
If your browser does not support TTS, LiaScript will fallback ResponsiveVoice.
You can use this this example as a basis for your own course by following this link</description></item></channel></rss>